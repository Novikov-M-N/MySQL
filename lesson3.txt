# База данных «Страны и города мира»:

# 1. Сделать запрос, в котором мы выберем все данные о городе – регион, страна.
SELECT
	city.id AS id,
    city.country_id AS country_id,
    city.region_id AS region_id,
    city.important AS important,
    city.title AS title,
    region.title AS region,
    country.title AS country
FROM
	geodata._cities AS city
    JOIN geodata._regions AS region ON region.id = city.region_id
    JOIN geodata._countries AS country ON country.id = region.country_id
;

# 2. Выбрать все города из Московской области.
SELECT
	*
FROM
	geodata._cities
WHERE region_id IN (
	SELECT
		id
    FROM
		geodata._regions
	WHERE
		title = "Московская область"
)
;

# База данных «Сотрудники»:

# 1. Выбрать среднюю зарплату по отделам.
# Выбираем среднюю зарплату и название отдела, если требуется название. Если нужен номер, выбираем номер.
SELECT
	avg(salary.salary) AS avg_salary,
    dept.dept_name AS dept_name
FROM
	employees.salaries AS salary
	JOIN employees.dept_emp AS emp ON emp.emp_no = salary.emp_no
	JOIN employees.departments AS dept ON dept.dept_no = emp.dept_no
WHERE
	# Для вычисления по зарплатам, актуальным на данный момент, добавляем ограничивающее условие по дате.
	# Если требуется учесть и прошлые зарплаты, то данное условие нужно закомментить.
	salary.to_date = "9999-01-01"
GROUP BY
	dept.dept_no
;

# 2. Выбрать максимальную зарплату у сотрудника.
SELECT
    salary.emp_no AS emp_no,
    CONCAT_WS(' ',employee.first_name, employee.last_name) AS name,
    max(salary.salary) AS max_salary
FROM
    employees.salaries AS salary
    JOIN employees.employees AS employee ON employee.emp_no = salary.emp_no
# Следующее условие добавляем, если нам требуется получить максимальную зарплату одного конкретного сотрудника.
# WHERE
# 	CONCAT_WS(' ',employee.first_name, employee.last_name) = 'Sanjai Luders'
# Либо по emp_no в зависимости от конкретной задачи.
# Так же можно добавить ограничение по дате для учёта только актуальных зарплат аналогично предыдущему запросу.
#	AND salary.to_date = '9999-01-01'
GROUP BY
	emp_no
ORDER BY
	max_salary DESC
# Если требуется получить максимальную зарплату по всем сотрудникам, оставляем запрос, как есть.
# Если требуестя выбрать одного сотрудника с максимальной зарплатой, следующую строку нужно раскомментировать.
# LIMIT 1
;

# 3. Удалить одного сотрудника, у которого максимальная зарплата.
DELETE
FROM
    employees.employees
WHERE
	emp_no = (
		SELECT
			salary.emp_no
		FROM
			employees.salaries AS salary
		ORDER BY
			salary.salary DESC
		LIMIT
			1
    )
;
# Из остальных таблиц все данные, касаемые этого сотрудника, удалятся, благодаря каскадному удалению через внешние ключи.

# 4. Посчитать количество сотрудников во всех отделах.
SELECT
	count(emp.emp_no) AS emp_count,
    dept.dept_name AS dept_name
FROM
	employees.dept_emp AS emp
    JOIN employees.departments AS dept ON dept.dept_no = emp.dept_no
# Условие для подсчёта по актуальным на данный момент сотрудникам.
# Если требуется подсчёт по всем имеющимся в базе данным, независимо от актуальности, данное условие нужно закомментить.
WHERE
	emp.to_date = '9999-01-01'
GROUP BY
	dept.dept_no
;

# 5. Найти количество сотрудников в отделах и посмотреть, сколько всего денег получает отдел.
SELECT
    dept.dept_name AS dept_name,
    count(emp.emp_no) AS emp_count,
    sum(salary.salary) AS sum_salary
FROM
	employees.dept_emp AS emp
    JOIN employees.departments AS dept ON dept.dept_no = emp.dept_no
    JOIN employees.salaries AS salary ON salary.emp_no = emp.emp_no
# Условие актуальности данных. Комментируется, если требуется выборка без учёта актуальности.
WHERE
	emp.to_date = '9999-01-01'
    AND
    salary.to_date = '9999-01-01'
GROUP BY
	dept.dept_no
;